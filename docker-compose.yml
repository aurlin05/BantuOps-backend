version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: bantuops-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-bantuops_db}
      POSTGRES_USER: ${DB_USERNAME:-bantu_admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Aurlin10}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - bantuops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-bantuops} -d ${DB_NAME:-bantuops_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: bantuops-redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    command: >
      sh -c "
        if [ -n \"$$REDIS_PASSWORD\" ]; then
          redis-server --requirepass $$REDIS_PASSWORD --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
        else
          redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
        fi
      "
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - bantuops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
      - no-new-privileges:true

  # Application Backend
  bantuops-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bantuops-backend
    environment:
      # Configuration de base
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-production}
      SERVER_PORT: 8080
      
      # Base de données
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-bantuops_db}
      DB_USERNAME: ${DB_USERNAME:-bantuops}
      DB_PASSWORD: ${DB_PASSWORD:-bantuops123}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      
      # Sécurité
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      
      # Configuration de l'entreprise
      COMPANY_NINEA: ${COMPANY_NINEA:-}
      COMPANY_RCCM: ${COMPANY_RCCM:-}
      COMPANY_PHONE: ${COMPANY_PHONE:-}
      COMPANY_EMAIL: ${COMPANY_EMAIL:-}
      
      # JVM Options
      JAVA_OPTS: "-Xmx1024m -Xms512m -XX:+UseG1GC -XX:+UseContainerSupport -Dspring.profiles.active=${SPRING_PROFILES_ACTIVE:-production}"
    ports:
      - "${APP_PORT:-8080}:8080"
      - "${MANAGEMENT_PORT:-8081}:8081"
    volumes:
      - app_logs:/app/logs
      - app_data:/app/data
    networks:
      - bantuops-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Nginx Reverse Proxy (optionnel pour la production)
  nginx:
    image: nginx:alpine
    container_name: bantuops-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - bantuops-network
    depends_on:
      - bantuops-backend
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  app_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  bantuops-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16