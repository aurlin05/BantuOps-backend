# Configuration de production sécurisée pour BantuOps Backend

# Configuration de base
spring.application.name=BantuOps-backend
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/api

# Configuration SSL/TLS pour la production
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE_PATH:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
server.ssl.key-store-type=${SSL_KEYSTORE_TYPE:PKCS12}
server.ssl.key-alias=${SSL_KEY_ALIAS:bantuops}

# Configuration de la base de données
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:bantuops_db}?sslmode=require&stringtype=unspecified
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de connexions optimisé pour la production
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${DB_POOL_MAX_LIFETIME:1800000}
spring.datasource.hikari.connection-timeout=${DB_POOL_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.leak-detection-threshold=${DB_POOL_LEAK_DETECTION:60000}

# Configuration JPA pour la production
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# Configuration Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false
spring.flyway.clean-disabled=true

# Configuration Redis sécurisée
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.timeout=5000ms
spring.data.redis.ssl=${REDIS_SSL:false}
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.lettuce.pool.max-wait=2000ms

# Configuration JWT sécurisée
bantuops.jwt.secret=${JWT_SECRET}
bantuops.jwt.access-token-expiration=${JWT_ACCESS_EXPIRATION:1800}
bantuops.jwt.refresh-token-expiration=${JWT_REFRESH_EXPIRATION:604800}
bantuops.jwt.issuer=${JWT_ISSUER:bantuops-api}
bantuops.jwt.audience=${JWT_AUDIENCE:bantuops-client}

# Configuration de chiffrement
bantuops.encryption.key=${ENCRYPTION_KEY}
bantuops.encryption.validate-on-startup=true
bantuops.encryption.min-key-strength=256
bantuops.encryption.algorithm=${ENCRYPTION_ALGORITHM:AES/GCM/NoPadding}

# Configuration de sécurité renforcée
spring.security.require-ssl=${SSL_ENABLED:false}
spring.security.headers.frame=DENY
spring.security.headers.content-type=true
spring.security.headers.xss=true

# Configuration des sessions
spring.session.store-type=redis
spring.session.redis.namespace=bantuops:session:prod
spring.session.redis.cleanup-cron=0 */10 * * * *
spring.session.timeout=${SESSION_TIMEOUT:1800s}

# Configuration du cache Redis
spring.cache.type=redis
spring.cache.redis.time-to-live=${CACHE_TTL:1800000}
spring.cache.redis.cache-null-values=false
spring.cache.redis.enable-statistics=true
spring.cache.redis.key-prefix=bantuops:cache:

# Configuration des logs pour la production
logging.level.root=WARN
logging.level.com.bantuops=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Configuration des logs structurés
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n

# Fichiers de logs
logging.file.name=/app/logs/bantuops-backend.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.file.total-size-cap=1GB

# Configuration Jackson sécurisée
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# Configuration de l'entreprise
bantuops.company.name=${COMPANY_NAME:BantuOps}
bantuops.company.address=${COMPANY_ADDRESS:Dakar, Sénégal}
bantuops.company.ninea=${COMPANY_NINEA}
bantuops.company.rccm=${COMPANY_RCCM}
bantuops.company.phone=${COMPANY_PHONE}
bantuops.company.email=${COMPANY_EMAIL}

# Configuration des bulletins de paie sécurisés
bantuops.payslip.security.enable-encryption=true
bantuops.payslip.security.enable-digital-signature=true
bantuops.payslip.security.encryption-algorithm=AES-256
bantuops.payslip.security.password-length=16
bantuops.payslip.security.include-employee-id-in-password=true
bantuops.payslip.security.include-period-in-password=true

# Configuration OpenAPI pour la production
springdoc.api-docs.enabled=${API_DOCS_ENABLED:false}
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED:false}
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Configuration des métriques et monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=when-authorized
management.health.redis.enabled=true
management.health.db.enabled=true
management.metrics.export.prometheus.enabled=true
management.server.port=${MANAGEMENT_PORT:8081}

# Configuration de sécurité pour les endpoints de management
management.endpoints.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://*.bantuops.com}
management.endpoints.web.cors.allowed-methods=GET,POST
management.endpoints.web.cors.allowed-headers=*
management.endpoints.web.cors.allow-credentials=true

# Configuration CORS pour l'API
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://*.bantuops.com}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# Configuration de l'audit
bantuops.audit.enabled=true
bantuops.audit.async=true
bantuops.audit.retention-days=${AUDIT_RETENTION_DAYS:2555}
bantuops.audit.log-sensitive-data=false

# Configuration des alertes de sécurité
bantuops.security.alerts.enabled=true
bantuops.security.alerts.email=${SECURITY_ALERT_EMAIL:security@bantuops.com}
bantuops.security.alerts.webhook=${SECURITY_ALERT_WEBHOOK:}
bantuops.security.max-login-attempts=${MAX_LOGIN_ATTEMPTS:5}
bantuops.security.lockout-duration=${LOCKOUT_DURATION:900}

# Configuration des limites de taux
bantuops.rate-limit.enabled=true
bantuops.rate-limit.requests-per-minute=${RATE_LIMIT_RPM:100}
bantuops.rate-limit.burst-capacity=${RATE_LIMIT_BURST:20}

# Configuration de la compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

# Configuration des timeouts
server.tomcat.connection-timeout=${CONNECTION_TIMEOUT:20000}
server.tomcat.keep-alive-timeout=${KEEP_ALIVE_TIMEOUT:20000}
server.tomcat.max-keep-alive-requests=${MAX_KEEP_ALIVE_REQUESTS:100}

# Configuration de la sécurité des headers HTTP
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict
server.servlet.session.cookie.max-age=${SESSION_TIMEOUT:1800}

# Configuration du node ID pour le clustering
bantuops.node.id=${NODE_ID:${HOSTNAME:node-${random.int(1000,9999)}}}
bantuops.node.datacenter=${DATACENTER:dc1}
bantuops.node.rack=${RACK:rack1}