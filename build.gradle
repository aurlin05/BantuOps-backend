plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.netflix.dgs.codegen' version '7.0.3'
	id 'org.hibernate.orm' version '6.6.29.Final'
	id 'org.graalvm.buildtools.native' version '0.10.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.bantuops'
version = '0.0.1-SNAPSHOT'
description = 'BantuOps-backend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		resolutionStrategy {
			force 'com.graphql-java:java-dataloader:3.3.0'
		}
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('testcontainersVersion', '1.19.3')
}

dependencies {
	// Testcontainers BOM
	testImplementation platform("org.testcontainers:testcontainers-bom:${testcontainersVersion}")
	
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.integration:spring-integration-http'
	implementation 'org.springframework.integration:spring-integration-jdbc'
	implementation 'org.springframework.integration:spring-integration-jpa'
	implementation 'org.springframework.integration:spring-integration-mail'
	implementation 'org.springframework.integration:spring-integration-redis'
	implementation 'org.springframework.integration:spring-integration-stomp'
	implementation 'org.springframework.integration:spring-integration-webflux'
	implementation 'org.springframework.integration:spring-integration-websocket'
	implementation 'org.springframework.integration:spring-integration-ws'
	implementation 'org.springframework.security:spring-security-messaging'
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	
	// PDF Generation dependencies
	implementation 'com.itextpdf:itext7-core:7.2.5'
	implementation 'com.itextpdf:html2pdf:4.0.5'
	implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.1.22'
	
	// OpenAPI/Swagger dependencies
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.3.0'
	
	// Actuator for metrics and health checks
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'org.springframework.integration:spring-integration-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	
	// Testcontainers dependencies
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:testcontainers'
	
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
	packageName = 'com.bantuops.backend.codegen'
	generateClient = true
}

hibernate {
	enhancement {
		enableAssociationManagement = true
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
